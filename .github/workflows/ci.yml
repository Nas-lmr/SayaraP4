# # This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: CI/CD 

# on:
#   push:
#     branches: [ "main" ] 
#   pull_request:
#     branches: [ "main" ]  

# jobs:
#   test-backend:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout du code
#       uses: actions/checkout@v4

#     - name: Installer Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: 20.16.0  

#     - name: Installer les dépendances Backend
#       run: |
#         cd Backend
#         npm install  # Installe les dépendances

#     - name: Exécuter les tests unitaires Backend
#       run: |
#         cd Backend
#         npm run test -- src/city/service/city.service.spec.ts  # Exécute les tests unitaires Jest

name: CI/CD Deployment

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install Dependencies
      run: |
        cd Frontend
        rm -rf node_modules package-lock.json  # Ensure clean install
        npm ci  # Faster and more reliable for CI/CD

    - name: Debug Node Modules
      run: |
        cd Frontend
        ls -R node_modules/date-fns/locale  # Check if locales exist

    - name: TypeScript Check
      run: |
        cd Frontend
        npx tsc --noEmit  # Ensure TypeScript is working

    - name: Build Frontend
      run: |
        cd Frontend
        npm run build

    - name: Deploy Frontend via SCP
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        source: "Frontend/dist/"
        target: "/var/www/html"





     

