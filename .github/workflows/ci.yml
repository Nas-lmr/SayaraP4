name: Deploy Frontend & Backend

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.16.0]

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # ******************************************************** Frontend ***********************************************
      - name: Installer les dépendances Frontend
        run: |
          set -e
          cd Frontend
          npm install

      - name: Créer le fichier .env du frontend
        run: |
          set -e
          cd Frontend
          echo "VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}" > .env
          echo "VITE_FRONTEND_PROD_URL=${{ secrets.VITE_FRONTEND_PROD_URL }}" >> .env
          echo "VITE_OPEN_ROUTE_SERVICE_KEY=${{ secrets.VITE_OPEN_ROUTE_SERVICE_KEY }}" >> .env
          echo "VITE_STRIPE_PUBLIC_KEY=${{ secrets.VITE_STRIPE_PUBLIC_KEY }}" >> .env

      - name: Build Frontend
        run: |
          set -e
          cd Frontend
          npm run build

      - name: Déployer le fichier .env via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "Frontend/.env"
          target: "/var/www/html/"
          strip_components: 1

      - name: Déployer le Frontend via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "Frontend/dist/*"
          target: "/var/www/html/"
          strip_components: 2

      # ******************************************************** Backend ***********************************************
      - name: Copier le package.json du Backend via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "Backend/package.json"
          target: "/home/shark/Backend/"
          strip_components: 1

      - name: Installer les dépendances Backend
        run: |
          set -e
          cd Backend
          npm install

      - name: Exécuter les tests unitaires Backend
        run: |
          set -e
          cd Backend
          npm run test -- src/city/service/city.service.spec.ts  

      - name: Créer le fichier .env du backend
        run: |
          set -e
          cd Backend
          echo "APP_PORT=${{ secrets.APP_PORT }}" > .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "API_SECRET_KEY=${{ secrets.API_SECRET_KEY }}" >> .env 
          echo "CLIENT_URL=${{ secrets.CLIENT_URL }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

      - name: Build Backend
        run: |
          set -e
          cd Backend
          npm run build

      - name: Déployer le Backend via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "Backend/dist/*"
          target: "/home/shark/Backend/dist"
          strip_components: 2

      - name: Déployer le fichier .env via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "Backend/.env"
          target: "/home/shark/Backend/dist"
          strip_components: 1   

      - name: Redémarrer les services PM2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          run: |
             pm2 restart main
